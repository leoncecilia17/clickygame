{"ast":null,"code":"var _jsxFileName = \"/Users/cecilialeon/coding/clickygame/src/App.js\";\nimport React, { Component } from \"react\";\nimport DogCard from \"./components/DogCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport dogs from \"./dogbreeds.json\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dogs,\n      currentScore: 0,\n      highScore: 0\n    };\n\n    this.alreadyClicked = () => {\n      const newDogs = this.state.dogs.map(dog);\n    };\n\n    this.removeDog = id => {\n      // Filter this.state.friends for friends with an id not equal to the id being removed\n      const dogs = this.state.dogs.filter(dog => dog.id !== id); // Set this.state.friends equal to the new friends array\n\n      this.setState({\n        dogs\n      });\n    };\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Dog Breed Clicky Game\"), this.state.dogs.map(dog => React.createElement(DogCard, {\n      removeDog: this.removeDog,\n      id: dog.id,\n      key: dog.id,\n      breed: dog.breed,\n      image: dog.image,\n      temperament: dog.temperament,\n      group: dog.group,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/cecilialeon/coding/clickygame/src/App.js"],"names":["React","Component","DogCard","Wrapper","Title","dogs","App","state","currentScore","highScore","alreadyClicked","newDogs","map","dog","removeDog","id","filter","setState","render","breed","image","temperament","group"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BM,KAF0B,GAElB;AACNF,MAAAA,IADM;AAENG,MAAAA,YAAY,EAAE,CAFR;AAGNC,MAAAA,SAAS,EAAE;AAHL,KAFkB;;AAAA,SAQ1BC,cAR0B,GAQT,MAAM;AACrB,YAAMC,OAAO,GAAG,KAAKJ,KAAL,CAAWF,IAAX,CAAgBO,GAAhB,CAAoBC,GAApB,CAAhB;AACD,KAVyB;;AAAA,SAa1BC,SAb0B,GAadC,EAAE,IAAI;AAChB;AACA,YAAMV,IAAI,GAAG,KAAKE,KAAL,CAAWF,IAAX,CAAgBW,MAAhB,CAAuBH,GAAG,IAAIA,GAAG,CAACE,EAAJ,KAAWA,EAAzC,CAAb,CAFgB,CAGhB;;AACA,WAAKE,QAAL,CAAc;AAAEZ,QAAAA;AAAF,OAAd;AACD,KAlByB;AAAA;;AAoB1B;AACAa,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAEG,KAAKX,KAAL,CAAWF,IAAX,CAAgBO,GAAhB,CAAoBC,GAAG,IACtB,oBAAC,OAAD;AACE,MAAA,SAAS,EAAE,KAAKC,SADlB;AAEE,MAAA,EAAE,EAAED,GAAG,CAACE,EAFV;AAGE,MAAA,GAAG,EAAEF,GAAG,CAACE,EAHX;AAIE,MAAA,KAAK,EAAEF,GAAG,CAACM,KAJb;AAKE,MAAA,KAAK,EAAEN,GAAG,CAACO,KALb;AAME,MAAA,WAAW,EAAEP,GAAG,CAACQ,WANnB;AAOE,MAAA,KAAK,EAAER,GAAG,CAACS,KAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAFH,CADF;AAgBD;;AAtCyB;;AAyC5B,eAAehB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport DogCard from \"./components/DogCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport dogs from \"./dogbreeds.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    dogs, \n    currentScore: 0, \n    highScore: 0 \n  };\n\n  alreadyClicked = () => {\n    const newDogs = this.state.dogs.map(dog)\n  }\n\n\n  removeDog = id => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const dogs = this.state.dogs.filter(dog => dog.id !== id);\n    // Set this.state.friends equal to the new friends array\n    this.setState({ dogs });\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Dog Breed Clicky Game</Title>\n        {this.state.dogs.map(dog => (\n          <DogCard\n            removeDog={this.removeDog}\n            id={dog.id}\n            key={dog.id}\n            breed={dog.breed}\n            image={dog.image}\n            temperament={dog.temperament}\n            group={dog.group}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}