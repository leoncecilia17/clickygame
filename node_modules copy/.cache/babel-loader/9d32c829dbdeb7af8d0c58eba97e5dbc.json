{"ast":null,"code":"var _jsxFileName = \"/Users/cecilialeon/coding/clickygame/src/components/FriendCard/index.js\";\nimport React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      friends,\n      currentScore: 0,\n      highScore: 0\n    };\n\n    this.resetClick = () => {\n      const newfriends = this.state.friends.map(friend => {\n        friend.clicked = false;\n        return friend;\n      });\n      this.setState({\n        friends: newfriends\n      });\n    };\n\n    this.removeFriend = id => {\n      console.log(\"id\", id); // Filter this.state.friends for friends with an id not equal to the id being removed\n\n      const newArray = this.state.friends.map(friend => {\n        if (id === friend.id) {\n          if (friend.clicked) {\n            this.setState({\n              currentScore: 0\n            });\n            this.resetClick();\n          } else {\n            if (this.state.currentScore >= this.state.highScore) {\n              this.setState({\n                currentScore: this.state.currentScore + 1,\n                highScore: this.state.highScore + 1\n              });\n            } else {\n              this.setState({\n                currentScore: this.state.currentScore + 1\n              });\n            }\n          }\n\n          if (!friend.clicked) {\n            friend.clicked = true;\n          }\n        }\n\n        return friend;\n      });\n      console.log(friends); // Set this.state.friends equal to the new friends array\n\n      this.setState({\n        friends: newArray\n      });\n      const newShuffled = this.state.friends.sort(() => Math.random() - 0.5);\n      this.setState({\n        friends: newShuffled\n      });\n    };\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Friends List\"), \"Current Score: \", this.state.currentScore, \" High Score: \", this.state.highScore, this.state.friends.map(friend => React.createElement(FriendCard, {\n      removeFriend: this.removeFriend,\n      id: friend.id,\n      key: friend.id,\n      name: friend.name,\n      image: friend.image,\n      occupation: friend.occupation,\n      location: friend.location,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/cecilialeon/coding/clickygame/src/components/FriendCard/index.js"],"names":["React","Component","FriendCard","Wrapper","Title","friends","App","state","currentScore","highScore","resetClick","newfriends","map","friend","clicked","setState","removeFriend","id","console","log","newArray","newShuffled","sort","Math","random","render","name","image","occupation","location"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    currentScore: 0,\n    highScore: 0\n  };\n  resetClick = () => {\n    const newfriends = this.state.friends.map(friend => {\n      friend.clicked = false;\n      return friend\n    })\n    this.setState({\n      friends: newfriends\n    })\n  }\n  removeFriend = id => {\n    console.log(\"id\", id)\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const newArray = this.state.friends.map(friend => {\n      if (id === friend.id) {\n        if (friend.clicked) {\n          this.setState({\n            currentScore: 0,\n          })\n          this.resetClick()\n        }\n        else {\n          if(this.state.currentScore >= this.state.highScore){\n            this.setState({\n              currentScore: this.state.currentScore + 1,\n              highScore: this.state.highScore + 1\n            })\n          }\n          else\n          {\n            this.setState({\n              currentScore: this.state.currentScore + 1 \n            })\n          }\n         \n        }\n        if (!friend.clicked) {\n          friend.clicked = true;\n        }\n      }\n      return friend;\n    });\n    console.log(friends)\n    // Set this.state.friends equal to the new friends array\n    this.setState({ friends: newArray });\n    const newShuffled = this.state.friends.sort(() => Math.random() - 0.5)\n    this.setState({\n      friends: newShuffled\n    })\n  };\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Friends List</Title>\n      \n      Current Score: {this.state.currentScore} High Score: {this.state.highScore}\n        {this.state.friends.map(friend => (\n          <FriendCard\n            removeFriend={this.removeFriend}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\nexport default App;\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}