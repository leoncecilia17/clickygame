{"version":3,"sources":["components/DogCard/index.js","components/Wrapper/index.js","components/Title/index.js","components/ScoreBoard/index.js","App.js","index.js"],"names":["DogCard","props","className","onClick","alreadyClicked","id","alt","breed","src","image","temperament","group","Wrapper","children","Title","ScoreBoard","App","state","dogs","currentScore","highScore","resetClick","newdogs","map","dog","clicked","setState","console","log","newdogArray","shuffledArray","sort","Math","random","this","key","Component","ReactDOM","render","document","getElementById"],"mappings":"4rDA0BeA,MAvBf,SAAiBC,GACf,OACE,yBAAKC,UAAU,OAAOC,QAAS,kBAAMF,EAAMG,eAAeH,EAAMI,MAC9D,yBAAKH,UAAU,iBACb,yBAAKI,IAAKL,EAAMM,MAAOC,IAAKP,EAAMQ,SAEpC,yBAAKP,UAAU,WACb,4BACE,4BACE,0CADF,IAC2BD,EAAMM,OAEjC,4BACE,gDADF,IACiCN,EAAMS,aAEvC,4BACE,8CADF,IAC+BT,EAAMU,W,MCXhCC,MAJf,SAAiBX,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMY,W,MCG1BC,MAJf,SAAeb,GACb,OAAO,wBAAIC,UAAU,SAASD,EAAMY,W,MCGvBE,MAJf,SAAoBd,GAClB,OAAO,wBAAIC,UAAU,cAAcD,EAAMY,W,OCyF5BG,E,2MApFbC,MAAQ,CACNC,OACAC,aAAc,EACdC,UAAW,G,EAGbC,WAAa,WAEX,IAAMC,EAAU,EAAKL,MAAMC,KAAKK,IAAI,SAAAC,GAElC,OADAA,EAAIC,SAAU,EACPD,IAET,EAAKE,SAAS,CACZR,KAAMI,K,EAIVlB,eAAiB,SAAAC,GACfsB,QAAQC,IAAI,KAAMvB,GAElB,IAAMwB,EAAc,EAAKZ,MAAMC,KAAKK,IAAI,SAAAC,GAyBtC,OAxBInB,IAAOmB,EAAInB,KACVmB,EAAIC,SACL,EAAKC,SAAS,CACZP,aAAc,IAEhB,EAAKE,cAGF,EAAKJ,MAAME,cAAgB,EAAKF,MAAMG,UACvC,EAAKM,SAAS,CACZP,aAAc,EAAKF,MAAME,aAAe,EACxCC,UAAW,EAAKH,MAAMG,UAAY,IAIpC,EAAKM,SAAS,CACZP,aAAc,EAAKF,MAAME,aAAe,IAIzCK,EAAIC,UACPD,EAAIC,SAAU,IAGXD,IAETG,QAAQC,IAAIV,GAEZ,EAAKQ,SAAS,CAAER,KAAOW,IAEvB,IAAMC,EAAgB,EAAKb,MAAMC,KAAKa,KAAK,kBAAIC,KAAKC,SAAS,KAE7D,EAAKP,SAAS,CACZR,KAAOY,K,wEAKD,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,8BACA,kBAAC,EAAD,uBACgBI,KAAKjB,MAAME,aAC3B,6BAFA,eAGae,KAAKjB,MAAMG,WAEvBc,KAAKjB,MAAMC,KAAKK,IAAI,SAAAC,GAAG,OACtB,kBAAC,EAAD,CACEpB,eAAgB,EAAKA,eACrBC,GAAImB,EAAInB,GACR8B,IAAKX,EAAInB,GACTE,MAAOiB,EAAIjB,MACXE,MAAOe,EAAIf,MACXC,YAAac,EAAId,YACjBC,MAAOa,EAAIb,e,GA9ELyB,a,MCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.feca549a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction DogCard(props) {\r\n  return (\r\n    <div className=\"card\" onClick={() => props.alreadyClicked(props.id)}>\r\n      <div className=\"img-container\">\r\n        <img alt={props.breed} src={props.image} />\r\n      </div>\r\n      <div className=\"content\">\r\n        <ul>\r\n          <li>\r\n            <strong>Breed:</strong> {props.breed} \r\n          </li>\r\n          <li>\r\n            <strong>Temperament:</strong> {props.temperament}\r\n          </li>\r\n          <li>\r\n            <strong>AKC Group:</strong> {props.group}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  ); \r\n}\r\n\r\nexport default DogCard;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Title(props) {\r\n  return <h1 className=\"title\">{props.children}</h1>;\r\n}\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction ScoreBoard(props) {\r\n  return <h1 className=\"scoreboard\">{props.children}</h1>;\r\n}\r\n\r\nexport default ScoreBoard;\r\n","import React, { Component } from \"react\";\r\nimport DogCard from \"./components/DogCard\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Title from \"./components/Title\";\r\nimport ScoreBoard from \"./components/ScoreBoard\"; \r\nimport dogs from \"./dogbreeds.json\";\r\n\r\nclass App extends Component {\r\n  // Setting this.state.friends to the friends json array\r\n  state = {\r\n    dogs, \r\n    currentScore: 0, \r\n    highScore: 0 \r\n  };\r\n\r\n  resetClick = () => {\r\n    // resets game to start over while the high score remains saved in local space \r\n    const newdogs = this.state.dogs.map(dog => {\r\n      dog.clicked = false; \r\n      return dog \r\n    }); \r\n    this.setState({\r\n      dogs: newdogs \r\n    }); \r\n  }; \r\n\r\n  alreadyClicked = id => {\r\n    console.log(\"id\", id)\r\n    // filter the id of images that already have been clicked from those that have not\r\n    const newdogArray = this.state.dogs.map(dog => {\r\n      if (id === dog.id){\r\n        if(dog.clicked){\r\n          this.setState({\r\n            currentScore: 0, \r\n          })\r\n          this.resetClick()\r\n        }\r\n        else {\r\n          if(this.state.currentScore >= this.state.highScore){\r\n            this.setState({\r\n              currentScore: this.state.currentScore + 1, \r\n              highScore: this.state.highScore + 1\r\n            })\r\n          }\r\n          else {\r\n            this.setState({\r\n              currentScore: this.state.currentScore + 1\r\n            })\r\n          }\r\n        }\r\n        if (!dog.clicked){\r\n          dog.clicked = true; \r\n        }\r\n      }\r\n      return dog; \r\n    }); \r\n    console.log(dogs)\r\n    // newest array is stored and compared to even newer array \r\n    this.setState({ dogs : newdogArray }); \r\n\r\n    const shuffledArray = this.state.dogs.sort(()=>Math.random()-0.5)\r\n\r\n    this.setState({\r\n      dogs : shuffledArray\r\n    }); \r\n  };\r\n\r\n  // Map over this.state.friends and render a FriendCard component for each friend object\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <Title>Dog Breed Clicky Game</Title>\r\n        <ScoreBoard>\r\n        Current Score: {this.state.currentScore}\r\n        <br></br>\r\n        High Score: {this.state.highScore}\r\n        </ScoreBoard>\r\n        {this.state.dogs.map(dog => (\r\n          <DogCard\r\n            alreadyClicked={this.alreadyClicked}\r\n            id={dog.id}\r\n            key={dog.id}\r\n            breed={dog.breed}\r\n            image={dog.image}\r\n            temperament={dog.temperament}\r\n            group={dog.group}\r\n          />\r\n        ))}\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}